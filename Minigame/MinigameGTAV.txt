new world[MAX_PLAYERS];
new GetSpectatingID[MAX_PLAYERS];
new Float:health2[MAX_PLAYERS];
new Text:Box;
new Text:TextEquipes;				//Textdraws
new Text:TextRank;
new Text:Text2;
new Text:Circle;					//Textdraws
new Text:Numbers;
new Snipers;						//Verifica se o player é da Equipe Snipers
new Cars;							//Verifica se o player é da Equipe Cars
new Rank532;							//Verifica a quantidade de players no MiniGame
new bool:MGON;						//Verifica se o MiniGame está ON
new bool:MGAcontecendo;				//Verifica se o MiniGame está acontecento/iniciou
new PlayerNoMG[MAX_PLAYERS];		//Verifica se o player está no MiniGame
new Equipes[MAX_PLAYERS];			//Verifica em qual equipe o player está "Snipers ou Cars"
new Balance;						//Faz o balanço das equipes para igualar a quantidade
new StartVar;						//Inicia o MiniGame
new Objetos[28];					//Objetos criados no momento do MiniGame
new Count;							//Contagem regressiva para o MiniGame
new PlayerNoInfernus[MAX_PLAYERS];	//Verifica se o player está em um infernus
new SInfernus[12];					//Verifica se o id do veiculo que o player está
new Cameras;						//Verifica se o minigame já começou para parar as cameras
new Cam[MAX_PLAYERS];				//Timer para as cameras
new Timers[3];						//Timers
new FullCars[12];
new Float:Infernus[12][4] = {
{1645.0852, -2691.1604, 26.8261, 0.0000},
{1645.0852, -2484.5457, 26.8261, 180.0000},
{1640.7974, -2691.1604, 26.8261, 0.0000},
{1640.7974, -2484.5269, 26.8261, 180.0000},
{1636.7603, -2691.1604, 26.8261, 0.0000},
{1636.7603, -2484.5457, 26.8261, 180.0000},
{1632.9070, -2691.1604, 26.8261, 0.0000},
{1632.9070, -2484.5457, 26.8261, 180.0000},
{1629.0283, -2691.1604, 26.8261, 0.0000},
{1629.0283, -2484.5457, 26.8261, 180.0000},
{1624.9983, -2691.1604, 26.8261, 0.0000},
{1624.9983, -2484.5457, 26.8261, 180.0000}
};
new Float:SpawnSnipers[12][4] = {
{1647.94922, -2600.22534, 55.69350, 90.0},
{1648.59033, -2591.97046, 55.69350, 90.0},
{1623.46277, -2575.31323, 55.69350, 90.0},
{1622.86951, -2583.57251, 55.69350, 90.0},
{1623.29578, -2599.93726, 55.69350, 90.0},
{1640.35620, -2600.37476, 55.69350, 90.0},
{1648.05396, -2575.43604, 55.69350, 90.0},
{1631.53540, -2574.88550, 55.69350, 90.0},
{1631.76843, -2600.27563, 55.69350, 90.0},
{1648.59692, -2582.66235, 55.69350, 90.0},
{1639.76172, -2574.92627, 55.69350, 90.0},
{1622.88123, -2592.05713, 55.69350, 90.0}
};

MinigameInit()
{
	Snipers = 0;
	Cars = 0;
	Rank532 = 0;
	MGON = false;
	MGAcontecendo = false;
	Balance = 0;
	StartVar = 0;
	Count = 0;
	Cameras = 0;
	CreateTextDraws();
	return 1;
}

MinigameExit()
{
    Snipers = 0;
	Cars = 0;
	Rank532 = 0;
	MGON = false;
	MGAcontecendo = false;
	Balance = 0;
	StartVar = 0;
	Count = 0;
	Cameras = 0;
	DestroyTextDraws();
	return 1;
}

// MiniGameOnPlayerDisconnect()
// {
// 	PlayerNoInfernus[playerid] = -1;
// 	PlayerNoMG[playerid] = 0;
// 	Equipes[playerid] = 0;
// 	GetSpectatingID[playerid] = INVALID_PLAYER_ID;
// 	return 1;
// }

MiniGameOnPlayerDisconnect(playerid)
{
	new notmggtav[34], notmggtav2[30];
	if(PlayerNoMG[playerid] == 1)
	{
		if(Equipes[playerid] == 1)
		{
			format(notmggtav2,sizeof(notmggtav2),"Saiu do minigame equipe sniper");
			Snipers -=1;
		}
		else if(Equipes[playerid] == 2)
		{
			format(notmggtav2,sizeof(notmggtav2),"Saiu do minigame equipe cars");
			Cars -=1;
		}
		if(Cars == 0 || Snipers == 0)
		{
			if(Snipers == 0 && MGAcontecendo == true)
			{
				SendClientMessageToAllf2(-1, #av "Equipe cars ganhou.");
			}
			if(Cars == 0 && MGAcontecendo == true)
			{
				SendClientMessageToAllf2(-1, #av "Equipe snipers ganhou.");

			}
			FinalMG(playerid);
			return 1;
		}
		Rank532--;
		UpdatePlayer();
	}
	format(notmggtav,sizeof(notmggtav),"O jogador %s", APlayerData[playerid][PlayerName]);
    //notification.Show(playerid, notmggtav, notmggtav2, "", "LD_CHAT:thumbup");
	PlayerNoInfernus[playerid] = -1;
	PlayerNoMG[playerid] = 0;
	Equipes[playerid] = 0;
	GetSpectatingID[playerid] = INVALID_PLAYER_ID;
	return 1;
}

MiniGameOnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate != oldstate)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(GetSpectatingID[i] == playerid)
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						return PlayerSpectateVehicle(i, GetPlayerVehicleID(playerid));
					}
					else
					{
						return PlayerSpectatePlayer(i, playerid);
					}
				}
			}
		}
	}
	return 1;
}

MiniGameOnPlayerDeath(playerid, killerid)
{
	new notmggtav[34], notmggtav2[30];
	if(PlayerNoMG[playerid] == 1)
	{
		if(Equipes[playerid] == 1)
		{
			format(notmggtav2,sizeof(notmggtav2),"Saiu do minigame equipe sniper");
			Snipers -=1;
			if(Snipers > 1)
			{
				OnPlayerSpectate(playerid, killerid);
			}
		}
		else if(Equipes[playerid] == 2)
		{
			format(notmggtav2,sizeof(notmggtav2),"Saiu do minigame equipe cars");
			Cars -=1;
			if(Cars > 1)
			{
				OnPlayerSpectate(playerid, killerid);
			}
		}
		if(Cars == 0 || Snipers == 0)
		{
			if(Snipers == 0 && MGAcontecendo == true)
			{
				SendClientMessageToAllf2(-1, #av "Equipe cars ganhou.");
			}
			if(Cars == 0 && MGAcontecendo == true)
			{
				SendClientMessageToAllf2(-1, #av "Equipe snipers ganhou.");

			}
			FinalMG(playerid);
			return 1;
		}
		Rank532--;
		UpdatePlayer();
	}
	format(notmggtav,sizeof(notmggtav),"O jogador %s", APlayerData[playerid][PlayerName]);
    //notification.Show(playerid, notmggtav, notmggtav2, "", "LD_CHAT:thumbup");
	return 1;
}

MiniGameOnPlayerKeyStateChange(playerid, newkeys)
{
	if(newkeys == KEY_FIRE)
	{
		if(PlayerNoMG[playerid] == 1)
		{
			new InfernusFR, Float:InfernusH, Float: Ang;
			InfernusFR = GetPlayerVehicleID(playerid);
			GetVehicleHealth(InfernusFR, InfernusH);
			if(IsPlayerInAnyVehicle(playerid))
				{
					GetVehicleZAngle(InfernusFR, Ang);
					SetVehicleZAngle(InfernusFR, Ang);
					RepairVehicle(InfernusFR);
					AddVehicleComponent(InfernusFR, 1010);
				}
		}
	}
	return 1;
}

SBC:: StartMG(playerid, time)
{
	if(StartVar == 1)
	{
		if(Rank532 <= 1 && Snipers == 0 || Cars == 0)
		{
	    	//notification.Show(playerid, "", "Minigame cancelado. Motivo:", "Jogadores Insuficientes.", "LD_CHAT:thumbup");
			FinalMG(playerid);
			return 1;
	 	}
		else if(Rank532 > 1 && Count == 0)
		{
			for(new i = 0; i <= MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if (PlayerNoMG[i] == 1)
					{
						PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
						TextDrawShowForPlayer(i, Circle);
						TextDrawShowForPlayer(i, Numbers);
					}
				}
			}
			Timers[0] = SetTimer("ContDown5",1000,false);
        }
	}
	return 1;
}

SBC:: FinalMG(playerid)
{
	for(new f = 0; f < sizeof(Objetos); f ++)
	{
		DestroyObject(Objetos[f]);
	}
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerNoMG[i] == 1)
			{
				TogglePlayerControllable(i, true);
				SetCameraBehindPlayer(i);
				PlayerNoMG[i] = 0;
				Equipes[i] = 0;
				PlayerNoInfernus[i] = -1;
				GetSpectatingID[i] = INVALID_PLAYER_ID;
				ResetPlayerWeapons(i);
				SetPlayerHealth(i, Float:100.0);
				SetPlayerVirtualWorld(i,0);
				SetPlayerPos(i,-2796.9854, 1224.8180, 20.5429);
				TextDrawHideForPlayer(i, TextRank);
				TextDrawHideForPlayer(i, TextEquipes);
				TextDrawHideForPlayer(i, Text2);
				TextDrawHideForPlayer(i, Box);
				DisableRemoteVehicleCollisions(i, 0);

			}
		}
	}
	DestroyInfernus();
	MGON = false;
	Cars = 0;
	Snipers = 0;
	Rank532 = 0;
	StartVar = 0;
	Balance = 0;
	MGAcontecendo = false;
	Cameras = 0;
	KillTimer(Timers[0]);
	KillTimer(Timers[1]);
	KillTimer(Timers[2]);
	KillTimer(Cam[playerid]);
}

SBC:: Camera1(playerid)
{
	if(PlayerNoMG[playerid] == 1)
	{
		if(Cameras == 0)
		{
		InterpolateCameraPos(playerid, 1637.531738, -2512.643066, 38.203601, 1596.504028, -2587.914062, 79.733818, 3000);
		InterpolateCameraLookAt(playerid, 1637.570068, -2508.001708, 36.344413, 1600.545288, -2587.908203, 76.789672, 3000);
		Cam[playerid] = SetTimerEx("Camera2", 4000, false, "i", playerid);
		}
	}
}

SBC:: Camera2(playerid)
{
	if(PlayerNoMG[playerid] == 1)
	{
		if(Cameras == 0)
		{
		InterpolateCameraPos(playerid, 1596.504028, -2587.914062, 79.733818, 1634.439697, -2651.810546, 41.962860, 3000);
		InterpolateCameraLookAt(playerid, 1600.545288, -2587.908203, 76.789672, 1634.262695, -2656.480224, 40.184379, 3000);
		Cam[playerid] = SetTimerEx("Camera3", 4000, false, "i", playerid);
		}
	}
}

SBC:: Camera3(playerid)
{
	if(PlayerNoMG[playerid] == 1)
	{
		if(Cameras == 0)
		{
		InterpolateCameraPos(playerid, 1634.439697, -2651.810546, 41.962860, 1596.504028, -2587.914062, 79.733818, 3000);
		InterpolateCameraLookAt(playerid, 1634.262695, -2656.480224, 40.184379, 1600.545288, -2587.908203, 76.789672, 3000);
		Cam[playerid] = SetTimerEx("Camera4", 4000, false, "i", playerid);
		}
	}
}

SBC:: Camera4(playerid)
{
	if(PlayerNoMG[playerid] == 1)
	{
		if(Cameras == 0)
		{
		InterpolateCameraPos(playerid, 1596.504028, -2587.914062, 79.733818, 1637.531738, -2512.643066, 38.203601, 3000);
		InterpolateCameraLookAt(playerid, 1600.545288, -2587.908203, 76.789672, 1637.570068, -2508.001708, 36.344413, 3000);
		Cam[playerid] = SetTimerEx("Camera1", 4000, false, "i", playerid);
		}
	}
}

SBC:: ContDown5(playerid)
{
    Count = 1;
    for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerNoMG[i] == 1)
			{
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				new numb[20];
				format(numb,  sizeof(numb), "~r~h~4");
				TextDrawSetString(Numbers, numb);
			}
		}
	}
    Timers[0] = SetTimer("ContDown4",1000,false);
    return 1;
}

SBC:: ContDown4(playerid)
{
    Count = 1;
    for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerNoMG[i] == 1)
			{
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				new numb[10];
				format(numb,  sizeof(numb), "~r~h~~h~3");
				TextDrawSetString(Numbers, numb);
			}
		}
	}
    Timers[0] = SetTimer("ContDown3",1000,false);
    return 1;
}

SBC:: ContDown3(playerid)
{
    Count = 1;
    for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerNoMG[i] == 1)
			{
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				new numb[10];
				format(numb,  sizeof(numb), "~r~h~~h~~h~2");
				TextDrawSetString(Numbers, numb);
			}
		}
	}
    Timers[0] = SetTimer("ContDown2",1000,false);
    return 1;
}

SBC:: ContDown2(playerid)
{
    Count = 1;
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerNoMG[i] == 1)
			{
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				new numb[10];
				format(numb,  sizeof(numb), "~r~h~~h~~h~~h~1");
				TextDrawSetString(Numbers, numb);
			}
		}
	}
    Timers[0] = SetTimer("ContDown1",1000,false);
    return 1;
}

SBC:: ContDown1(playerid)
{
    Count = 1;
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerNoMG[i] == 1)
			{
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				new numb[10];
				format(numb,  sizeof(numb), "~r~h~~h~~h~~h~~h~GO");
				TextDrawSetString(Numbers, numb);
			}
		}
	}
    Timers[0] = SetTimer("ContDownGO",1000,false);
    return 1;
}

SBC:: ContDownGO(playerid)
{
    Count = 0;
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerNoMG[i] == 1)
			{
				TogglePlayerControllable(i, true);
				SetCameraBehindPlayer(i);
				DisableRemoteVehicleCollisions(playerid, 1);
				TextDrawHideForPlayer(i, Circle);
				TextDrawHideForPlayer(i, Numbers);
			}
			else if(Equipes[i] == 1)
			{
				ClearAnimations(i);
			}
		}
	}
	SendClientMessage(playerid, 0x33AA33AA, "O minigame iniciou!");
	MGAcontecendo = true;
	Cameras = 1;
    return 1;
}


SBC:: UpdateRainbow()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerNoMG[i] && IsPlayerInAnyVehicle(i))
		ChangeVehicleColor(GetPlayerVehicleID(i), random(255), random(255));
    }
    return 1;
}

SBC:: UpdatePlayer()
{
    new trank[128];
    format(trank,  sizeof(trank), "Jogadores: %d", Rank532);
    TextDrawSetString(TextRank, trank);
    return 1;
}

SBC:: Mapa()
{
	Objetos[0] = CreateObject(19531, 1635.24426, -2525.08569, 26.09510,   0.00000, 0.00000, 0.00000);
	Objetos[1] = CreateObject(18768, 1635.59839, -2587.56982, 53.85630,   0.00000, 0.00000, 0.00000);
	Objetos[2] = CreateObject(19531, 1635.24426, -2650.07837, 26.09510,   0.00000, 0.00000, 0.00000);
	Objetos[3] = CreateObject(18780, 1642.66699, -2653.12012, 27.81220,   0.00000, 10.00000, 90.00000);
	Objetos[4] = CreateObject(18780, 1627.66785, -2653.12012, 27.81220,   0.00000, 10.00000, 90.00000);
	Objetos[5] = CreateObject(18780, 1627.66785, -2522.19995, 27.81220,   0.00000, 10.00000, 270.00000);
	Objetos[6] = CreateObject(18780, 1642.66699, -2522.21997, 27.81220,   0.00000, 10.00000, 270.00000);
	Objetos[7] = CreateObject(19650, 1635.16711, -2682.73486, 25.87330,   0.00000, 0.00000, 90.00000);
	Objetos[8] = CreateObject(19650, 1635.16711, -2657.72852, 25.85330,   0.00000, 0.00000, 90.00000);
	Objetos[9] = CreateObject(19645, 1635.16711, -2695.22217, 26.10700,   20.00000, 0.00000, 180.00000);
	Objetos[10] = CreateObject(19645, 1635.16711, -2479.94214, 26.10700,   20.00000, 0.00000, 0.00000);
	Objetos[11] = CreateObject(19650, 1635.16711, -2492.42871, 25.85330,   0.00000, 0.00000, 90.00000);
	Objetos[12] = CreateObject(19650, 1635.17139, -2517.40918, 25.85330,   0.00000, 0.00000, 90.00000);
	Objetos[13] = CreateObject(18825, 1583.41882, -2587.51367, 46.13170,   0.00000, 0.00000, 0.00000);
	Objetos[14] = CreateObject(18995, 1596.48035, -2587.51367, 62.04270,   0.00000, 90.00000, 0.00000);
	Objetos[15] = CreateObject(18995, 1601.46045, -2587.51367, 62.04270,   0.00000, 90.00000, 0.00000);
	Objetos[16] = CreateObject(18995, 1606.42053, -2587.51367, 62.04270,   0.00000, 90.00000, 0.00000);
	Objetos[17] = CreateObject(18825, 1687.12549, -2587.51367, 46.13170,   0.00000, 0.00000, 180.00000);
	Objetos[18] = CreateObject(18995, 1674.06250, -2587.51367, 62.04270,   0.00000, 90.00000, 0.00000);
	Objetos[19] = CreateObject(18995, 1669.06763, -2587.51367, 62.04270,   0.00000, 90.00000, 0.00000);
	Objetos[20] = CreateObject(18995, 1664.09033, -2587.51367, 62.04270,   0.00000, 90.00000, 0.00000);
	Objetos[21] = CreateObject(18753, 1635.23645, -2462.09521, 25.94820,   0.00000, 90.00000, 90.00000);
	Objetos[22] = CreateObject(18753, 1635.23645, -2713.06128, 25.94820,   0.00000, 90.00000, 90.00000);
	Objetos[23] = CreateObject(18753, 1698.17395, -2650.04492, 25.94820,   0.00000, 90.00000, 0.00000);
	Objetos[24] = CreateObject(18753, 1698.17395, -2525.08252, 25.94820,   0.00000, 90.00000, 0.00000);
	Objetos[25] = CreateObject(18753, 1572.36780, -2525.07593, 25.94820,   0.00000, 90.00000, 0.00000);
	Objetos[26] = CreateObject(18753, 1572.36780, -2650.04492, 25.94820,   0.00000, 90.00000, 0.00000);
	Objetos[27] = CreateObject(19332, 1636.13464, -2587.82642, 61.00030,   0.00000, 0.00000, 0.00000);
}

CreateTextDraws()
{
	Box = TextDrawCreate(86.000000, 283.000000, "_");
	TextDrawFont(Box, 2);
	TextDrawLetterSize(Box, -0.941667, 5.600003);
	TextDrawTextSize(Box, 349.000000, 167.000000);
	TextDrawSetOutline(Box, 1);
	TextDrawSetShadow(Box, 0);
	TextDrawAlignment(Box, 2);
	TextDrawColor(Box, -1);
	TextDrawBackgroundColor(Box, 255);
	TextDrawBoxColor(Box, 93);
	TextDrawUseBox(Box, 1);
	TextDrawSetProportional(Box, 1);
	TextDrawSetSelectable(Box, 0);

	TextEquipes = TextDrawCreate(5.000000, 296.000000, "Snipers x cars");
	TextDrawFont(TextEquipes, 3);
	TextDrawLetterSize(TextEquipes, 0.637499, 2.300000);
	TextDrawTextSize(TextEquipes, 400.000000, 17.000000);
	TextDrawSetOutline(TextEquipes, 0);
	TextDrawSetShadow(TextEquipes, 0);
	TextDrawAlignment(TextEquipes, 1);
	TextDrawColor(TextEquipes, -1);
	TextDrawBackgroundColor(TextEquipes, 1296911871);
	TextDrawBoxColor(TextEquipes, 50);
	TextDrawUseBox(TextEquipes, 0);
	TextDrawSetProportional(TextEquipes, 1);
	TextDrawSetSelectable(TextEquipes, 0);

	TextRank = TextDrawCreate(5.000000, 314.000000, "Jogadores: 0");
	TextDrawFont(TextRank, 2);
	TextDrawLetterSize(TextRank, 0.345833, 2.000000);
	TextDrawTextSize(TextRank, 400.000000, 17.000000);
	TextDrawSetOutline(TextRank, 0);
	TextDrawSetShadow(TextRank, 0);
	TextDrawAlignment(TextRank, 1);
	TextDrawColor(TextRank, -1);
	TextDrawBackgroundColor(TextRank, 255);
	TextDrawBoxColor(TextRank, 50);
	TextDrawUseBox(TextRank, 0);
	TextDrawSetProportional(TextRank, 1);
	TextDrawSetSelectable(TextRank, 0);

	Text2 = TextDrawCreate(165.000000, 282.000000, "MiniGame GTA V");
	TextDrawFont(Text2, 1);
	TextDrawLetterSize(Text2, 0.429166, 1.700000);
	TextDrawTextSize(Text2, 397.500000, 20.500000);
	TextDrawSetOutline(Text2, 0);
	TextDrawSetShadow(Text2, 0);
	TextDrawAlignment(Text2, 3);
	TextDrawColor(Text2, -1);
	TextDrawBackgroundColor(Text2, 255);
	TextDrawBoxColor(Text2, 50);
	TextDrawUseBox(Text2, 0);
	TextDrawSetProportional(Text2, 1);
	TextDrawSetSelectable(Text2, 0);

	Circle = TextDrawCreate(305.476074, 186.083404, "LD_BEAT:circle");
	TextDrawTextSize(Circle, 30.399999, 34.416706);
	TextDrawAlignment(Circle, 1);
	TextDrawColor(Circle, 180);
	TextDrawFont(Circle, 4);

	Numbers = TextDrawCreate(321.405609, 190.166687, "~r~5");
	TextDrawLetterSize(Numbers, 0.456090, 2.597500);
	TextDrawTextSize(Numbers, 5.622254, 60.083328);
	TextDrawAlignment(Numbers, 2);
	TextDrawColor(Numbers, 41215);
	TextDrawSetOutline(Numbers, 1);
	TextDrawBackgroundColor(Numbers, 51);
	TextDrawFont(Numbers, 2);
	TextDrawSetProportional(Numbers, 1);
}

DestroyTextDraws()
{
	TextDrawDestroy(Box);
	TextDrawDestroy(TextEquipes);
	TextDrawDestroy(TextRank);
	TextDrawDestroy(Text2);
	TextDrawDestroy(Circle);
	TextDrawDestroy(Numbers);
}

SBC:: SpawnInfernus()
{
    for(new i=0; i<12; i++)
    {
		SInfernus[i] = CreateVehicle(411,Infernus[i][0],Infernus[i][1],Infernus[i][2],Infernus[i][3],222,222,-1);
		SetVehicleVirtualWorld(SInfernus[i],1);
		FullCars[i] = 0;
	}
	return 1;
}

SBC:: DestroyInfernus()
{
    for(new i=0; i<12; i++)
    {
    	DestroyVehicle(SInfernus[i]);
		FullCars[i] = 0;
    }
}

OnPlayerSpectate(playerid, killerid)
{
	GetPlayerHealth(playerid, health2[playerid]);
	//GetPlayerPos(playerid, x22[playerid], y22[playerid], z22[playerid]);
	//GetPlayerFacingAngle(playerid, a[playerid]);
	GetPlayerVirtualWorld(playerid);
	world[playerid] = GetPlayerVirtualWorld(playerid);
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			TogglePlayerSpectating(playerid, 1);
			SetPlayerInterior(i, GetPlayerInterior(killerid));
			SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(killerid));
			new vehicleid = GetPlayerVehicleID(killerid);
			if (vehicleid != 0) {
				PlayerSpectateVehicle(i, vehicleid);
			}
			else {
				PlayerSpectatePlayer(i, killerid);
			}
		}
	}
	GetSpectatingID[playerid] = killerid;
	return 1;
}


CMD:abrirmg2(playerid, params[])
{
 	new notmggtav[34];
	if(MGON == true)
	{
		SendClientMessage(playerid, -1, #av "O minigame já foi aberto!");
	}
	else if(MGON == false)
	{
		SpawnInfernus();
		Mapa();
		MGON = true;
		StartVar += 1;
		Timers[1] = SetTimer("StartMG", 60000, false);
		Timers[2] = SetTimer("UpdateRainbow", 150, true);
		format(notmggtav,sizeof(notmggtav),"O jogador %s", APlayerData[playerid][PlayerName]);
	    //notification.Show(playerid, notmggtav, "Iniciou o MiniGame GTA V", "1 minuto para iniciar!", "LD_CHAT:thumbup");
		SendClientMessageToAll(-1, notmggtav);
	}
	return 1;
}

CMD:irmg(playerid, params[])
{
	new notmggtav[34], notmggtav2[13];
	if(MGON == false)
	{
		SendClientMessage(playerid, -1, #av "Nenhum minigame aberto no momento!");
		return 1;
	}
	if(PlayerNoMG[playerid] == 1)
	{
		SendClientMessage(playerid, -1, #av "Você já está no minigame!");
		return 1;
	}
	if(MGAcontecendo == true)
	{
		SendClientMessage(playerid, -1, #av "O minigame já iniciou!");
		return 1;
	}
	if(MGON == true && Snipers >= 12 && Cars >= 12)
	{
		SendClientMessage(playerid,-1, #av "O minigame está cheio,tente na próxima rodada.");
	}
	if(MGON == true && Balance == 0)
	{
		TextDrawShowForPlayer(playerid, TextRank);
		TextDrawShowForPlayer(playerid, TextEquipes);
		TextDrawShowForPlayer(playerid, Text2);
		TextDrawShowForPlayer(playerid, Box);
		Rank532 ++;
		UpdatePlayer();
		Snipers += 1;
		Balance = 1;
		ResetPlayerWeapons(playerid);
		Equipes[playerid] = 1;
		PlayerNoMG[playerid] = 1;
		SetPlayerVirtualWorld(playerid,50);
		new rand = random(sizeof(SpawnSnipers));
		SetPlayerPos(playerid, SpawnSnipers[rand][0], SpawnSnipers[rand][1], SpawnSnipers[rand][2]);
		SetPlayerFacingAngle(playerid, SpawnSnipers[rand][3]);
		TogglePlayerControllable(playerid, false);
		SetPlayerHealth(playerid, Float:50.0);
		GivePlayerWeapon(playerid, 34, 99999);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
		Camera1(playerid);
		ApplyAnimation(playerid, "DANCING", "DNCE_M_A", 4.1, 1, 0, 0, 0, 0, 0);
	}
	else if(MGON == true && Balance == 1)
	{
		Rank532 ++;
		UpdatePlayer();
		Cars += 1;
		Balance = 0;
		Equipes[playerid] = 2;
		FullCars[0] = 1;
		for(new i = 0; i <= 12; i++)
		{
			if(FullCars[i] == 0)
			{
			PlayerNoMG[playerid] = 1;
			TextDrawShowForPlayer(playerid, TextRank);
			TextDrawShowForPlayer(playerid, TextEquipes);
			TextDrawShowForPlayer(playerid, Text2);
			TextDrawShowForPlayer(playerid, Box);
			ResetPlayerWeapons(playerid);
			PlayerNoInfernus[playerid] = i;
			SetPlayerVirtualWorld(playerid, 50);
			FullCars[i] = 1;
			SetVehicleVirtualWorld(SInfernus[i],50);
			PutPlayerInVehicle(playerid, SInfernus[i], 0);
			TogglePlayerControllable(playerid, false);
			SetPlayerHealth(playerid, Float:15.0);
			Camera1(playerid);
			return 1;
			}
		}
	}
	format(notmggtav,sizeof(notmggtav), "O jogador %s", APlayerData[playerid][PlayerName]);
	if(Equipes[playerid] == 1)
	{
		format(notmggtav2,sizeof(notmggtav2),"equipe snipers");
	}
	else if(Equipes[playerid] == 2)
	{
		format(notmggtav2,sizeof(notmggtav2),"equipe cars");
	}
    //notification.Show(playerid, notmggtav, "Foi para o MiniGame GTA V", notmggtav2, "LD_CHAT:thumbup");
	return 1;
}

CMD:sairmg2(playerid, params[])
{
	new notmggtav[34], notmggtav2[13];
	if(PlayerNoMG[playerid] == 1)
	{
		if(Equipes[playerid] == 1)
		{
			Snipers -=1;
			PlayerNoMG[playerid] = false;
			Rank532 -=1;
			Equipes[playerid] = false;
			Balance = 0;
			format(notmggtav2,sizeof(notmggtav2),"equipe snipers");
		}
		else if(Equipes[playerid == 2])
		{
			Cars -=1;
			PlayerNoMG[playerid] = false;
			Rank532 -=1;
			PlayerNoInfernus[playerid] = -1;
			Equipes[playerid] = false;
			Balance = 1;
			format(notmggtav2,sizeof(notmggtav2),"equipe cars");
		}
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerHealth(playerid, Float:100.0);
		ResetPlayerWeapons(playerid);
		SetPlayerPos(playerid,-2796.9854, 1224.8180, 20.5429);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		TextDrawHideForPlayer(playerid, TextRank);
		TextDrawHideForPlayer(playerid, TextEquipes);
		TextDrawHideForPlayer(playerid, Text2);
		TextDrawHideForPlayer(playerid, Box);
		TextDrawHideForPlayer(playerid, Circle);
		format(notmggtav,sizeof(notmggtav),"O jogador %s", APlayerData[playerid][PlayerName]);
		//notification.Show(playerid, notmggtav, "Saiu do MiniGame GTA V", notmggtav2, "LD_CHAT:thumbup");
	}
	else
	{
		SendClientMessage(playerid, -1, #er "Você não está em um minigame!");
	}
	UpdatePlayer();
	return 1;
}

CMD:debug2(playerid, params[])
{
	new Debug[256];
	format(Debug,sizeof(Debug),"Snipers:%d Cars:%d Rank532:%d MGON:%d MGAcontecendo:%d Balance:%d StartVar:%d CounT:%d PlayerNoMG:%d Equipes:%d PlayerNoInfenus:%d", Snipers, Cars, Rank532, MGON, MGAcontecendo, Balance, StartVar, Count, PlayerNoMG[playerid], Equipes[playerid], PlayerNoInfernus[playerid]);
	print(Debug);
	SendClientMessageToAll(0x696969FF, Debug);
	return 1;
}
